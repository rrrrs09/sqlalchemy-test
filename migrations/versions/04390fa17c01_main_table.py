"""main_table

Revision ID: 04390fa17c01
Revises: 
Create Date: 2022-10-11 10:41:18.750589

"""
from datetime import datetime
from uuid import UUID, uuid4

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import app.config as config
from app.generator import generate_children

# revision identifiers, used by Alembic.
revision = "04390fa17c01"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    tree_table = op.create_table(
        "tree",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("parent_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("title", sa.String(length=60), nullable=False),
        sa.Column("registered_in", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["tree.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###

    root_id = uuid4()

    nodes = []
    nodes.append(
        {
            "id": root_id,
            "parent_id": None,
            "title": "Root",
            "registered_in": datetime.utcnow(),
        }
    )

    nodes += generate_children(config.NODES_PER_LEVEL, root_id, config.MAX_DEPTH)

    op.bulk_insert(tree_table, nodes)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tree")
    # ### end Alembic commands ###
